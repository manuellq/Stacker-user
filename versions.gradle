/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]

versions.kotlin = "1.3.41"
versions.anko = "0.10.7"
versions.room = "2.1.0"
versions.Lifecycle = "2.0.0"
versions.support = "1.0.0"
versions.material = "1.0.0"
versions.constraint_layout = "1.1.3"
versions.retrofit = "2.4.0"
versions.okhttp_logging_interceptor = "3.13.1"
versions.moshi_version = "1.6.0"

versions.rxjava2 = "2.2.4"
versions.rx_android = "2.1.0"
versions.rx_kotlin = "2.3.0"
versions.rx_binding = "2.2.0"

versions.butter_knife = "10.0.0"
versions.timber = "4.7.1"
versions.leak_canary = '1.5.4'
versions.facebook_stheto = '1.5.0'
versions.okhttp_signpost = '1.1.0'

def deps = [:]

//google libraries
def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:1.0.2"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.material"
support.ktx_core = "androidx.core:core-ktx:1.0.2"
support.palette = "androidx.palette:palette:$versions.support"
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.guava = "androidx.room:room-guava:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.Lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.Lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.Lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.Lifecycle"
deps.lifecycle = lifecycle

deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"

def navigation = [:]
navigation.fragment = "androidx.navigation:navigation-fragment-ktx:2.0.0"
navigation.uiktx = "androidx.navigation:navigation-ui-ktx:2.0.0"
deps.navigation = navigation

//Dependency injection

deps.koin = 'org.koin:koin-androidx-viewmodel:2.0.1'

//square libraries
def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.adapter_RXJava = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.moshi = "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
deps.retrofit = retrofit

deps.okhttp3 = "com.squareup.okhttp3:okhttp:$versions.okhttp_logging_interceptor"
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
deps.picasso = "com.squareup.picasso:picasso:2.5.2"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"

def moshi = [:]
moshi.moshi_core = "com.squareup.moshi:moshi:$versions.moshi_version"
moshi.moshi_codegen = "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi_version"
deps.moshi = moshi

//kotlin
def kotlin = [:]
kotlin.stdlib_java = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"

//-Anko
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.anko_commons = "org.jetbrains.anko:anko-commons:$versions.anko"
kotlin.anko_design = "org.jetbrains.anko:anko-design:$versions.anko"
kotlin.anko_app_compat = "org.jetbrains.anko:anko-appcompat-v7:$versions.anko"
deps.kotlin = kotlin

//rx java
def rxjava = [:]
rxjava.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
rxjava.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
rxjava.rx_kotlin = "io.reactivex.rxjava2:rxkotlin:$versions.rx_kotlin"
deps.rxjava = rxjava

//rx binding
def rx_binding = [:]
rx_binding.rx_binding2 = "com.jakewharton.rxbinding2:rxbinding:$versions.rx_binding"
rx_binding.rx_appcompat = "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$versions.rx_binding"
deps.rx_binding = rx_binding

//---------------------------------------------------

deps.picasso = "com.squareup.picasso:picasso:2.5.2"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.butter_knife_compiler = "com.jakewharton:butterknife-compiler:$versions.butter_knife"
deps.butter_kinfe = "com.jakewharton:butterknife:$versions.butter_knife"
deps.layout_shimmer = 'io.supercharge:shimmerlayout:2.1.0'
deps.picasso = "com.squareup.picasso:picasso:2.5.2"

deps.okhttp3 = "com.squareup.okhttp3:okhttp:$versions.okhttp_logging_interceptor"
deps.okhttp_signpost = "se.akerfeldt:okhttp-signpost:$versions.okhttp_signpost"

deps.facebook_stetho = "com.facebook.stetho:stetho-okhttp3:$versions.facebook_stheto"

def leak_canary = [:]
leak_canary.Test = "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leak_canary"
leak_canary.debug = "com.squareup.leakcanary:leakcanary-android:$versions.leak_canary"
leak_canary.release = "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leak_canary"
deps.leak_canary = leak_canary


versions.junit = "4.12"
versions.robolectric = "4.1"
versions.test_runner = "1.2.0"
versions.test_rules = "1.2.0"
versions.espresso = "3.2.0"

//-------------------testing libraries------------------

//androidTestImplementation
def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

deps.runner = "androidx.test:runner:$versions.test_runner"
deps.rules = "androidx.test:rules:$versions.test_rules"
deps.live_cycle = "androidx.arch.core:core-testing:$versions.Lifecycle"

//testImplementation
deps.junit = "junit:junit:$versions.junit"
deps.roboelectric = "org.robolectric:robolectric:$versions.robolectric"
deps.mockk = "io.mockk:mockk:1.9.3"
deps.truth = "com.google.truth:truth:0.43"
ext.deps = deps

//---------------------------------------------------

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
build_versions.version_code = 1
build_versions.version_code_name = "1"
build_versions.application_id = "com.mlcorrea.stackeruser"
ext.build_versions = build_versions

def build_versions_mock = [:]
build_versions_mock.application_id_mock = build_versions.application_id + ".mock"
build_versions_mock.version_name_mock = build_versions.version_code_name + " Mock"
ext.build_versions_mock = build_versions_mock

def build_versions_staging = [:]
build_versions_staging.application_id_staging = build_versions.application_id + ".staging"
build_versions_staging.version_name_staging = build_versions.version_code_name + " Staging"
ext.build_versions_staging = build_versions_staging

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.mavenCentral()
    handler.mavenLocal()
    handler.jcenter()
    handler.maven { url "https://plugins.gradle.org/m2/" }//For sonar cube
    handler.maven { url 'https://jitpack.io' }
}

ext.addRepos = this.&addRepos